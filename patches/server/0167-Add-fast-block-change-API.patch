From 6b7bf62297fc1fa0298cc80eabb33bb5c8a63763 Mon Sep 17 00:00:00 2001
From: Austin Mayes <almayes@trevecca.edu>
Date: Tue, 5 Feb 2019 00:59:06 -0600
Subject: [PATCH] Add fast block change API


diff --git a/src/main/java/net/minecraft/server/BlockPosition.java b/src/main/java/net/minecraft/server/BlockPosition.java
index 4160d545a..1f28a9977 100644
--- a/src/main/java/net/minecraft/server/BlockPosition.java
+++ b/src/main/java/net/minecraft/server/BlockPosition.java
@@ -318,4 +318,10 @@ public class BlockPosition extends BaseBlockPosition {
             return super.c(baseblockposition);
         }
     }
+
+    // SportPaper start
+    public static BlockPosition immutableFrom(org.bukkit.util.Vector vec) {
+        return new BlockPosition(vec.getBlockX(), vec.getBlockY(), vec.getBlockZ());
+    }
+    // SportPaper end
 }
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftWorld.java b/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
index 4135d5954..dc81e2607 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
@@ -875,6 +875,7 @@ public class CraftWorld implements World {
         getPlayers().forEach(player -> player.sendMessage(components));
     }
 
+    // SportPaper start
     @Override
     public void broadcast(TranslatableComponent... translatables) {
         getPlayers().forEach(player -> player.sendMessage(translatables));
@@ -885,6 +886,34 @@ public class CraftWorld implements World {
         getPlayers().forEach(player -> player.sendMessage(translatable));
     }
 
+    private static final int UPDATE_CLIENTS = 2;
+
+    @Override
+    public void fastBlockChange(final Vector vec, final org.bukkit.material.MaterialData material) {
+        final net.minecraft.server.Block block = CraftMagicNumbers.getBlock(material.getItemType());
+        final IBlockData state = block.fromLegacyData(material.getData());
+        this.fastBlockChange(vec, state);
+    }
+
+    @Override
+    public void fastBlockChange(final Iterable<Vector> vecs, final org.bukkit.material.MaterialData material) {
+        final net.minecraft.server.Block block = CraftMagicNumbers.getBlock(material.getItemType());
+        final IBlockData state = block.fromLegacyData(material.getData());
+        for (final Vector vec : vecs) {
+            this.fastBlockChange(vec, state);
+        }
+    }
+
+    private void fastBlockChange(final Vector vec, final IBlockData state) {
+        this.world.setTypeAndData(BlockPosition.immutableFrom(vec), state, UPDATE_CLIENTS);
+    }
+
+    @Override
+    public void fastBlockChange(final Vector vec, final short material, final byte data) {
+        this.fastBlockChange(vec, new org.bukkit.material.MaterialData(material, data));
+    }
+    // SportPaper end
+
     public void save() {
     // Spigot start
         save(true);
-- 
2.30.2

